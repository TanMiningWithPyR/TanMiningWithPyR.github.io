knitr::opts_chunk$set(echo = TRUE)
library(readr)
wbcd <- read_csv("wisc_bc_data.csv")
str(wbcd)
# drop the id feature
wbcd <- wbcd[-1]
# table of diagnosis
table(wbcd$diagnosis)
# recode diagnosis as a factor
wbcd$diagnosis <- factor(wbcd$diagnosis, levels = c("B", "M"),
labels = c("Benign", "Malignant"))
# table or proportions with more informative labels
round(prop.table(table(wbcd$diagnosis)) * 100, digits = 1)
# summarize three numeric features
summary(wbcd[c("radius_mean", "area_mean", "smoothness_mean")])
# normalize the wbcd data
wbcd_n <- as.data.frame(scale(wbcd[,2:31]))
# confirm that normalization worked
summary(wbcd_n[c("radius_mean", "area_mean", "smoothness_mean")])
# summarize three numeric features
summary(wbcd[c("radius_mean", "area_mean", "smoothness_mean")])
# normalize the wbcd data
wbcd_n <- as.data.frame(scale(wbcd[,2:31]))
# confirm that normalization worked
summary(wbcd_n[c("radius_mean", "area_mean", "smoothness_mean")])
# create training and test data
wbcd_train <- wbcd_n[1:469, ]
wbcd_test <- wbcd_n[470:569, ]
# create labels for training and test data
wbcd_train_labels <- wbcd[1:469, 1]
wbcd_test_labels <- wbcd[470:569, 1]
# load the "class" library
library(class)
wbcd_test_pred <- knn(train = wbcd_train, test = wbcd_test,
cl = wbcd_train_labels, k=21)
length(wbcd_train)
length(wbcd_train_labels)
dim(wbcd_train)
knitr::opts_chunk$set(echo = TRUE)
# Generate a sample dataset
set.seed(1014)
df <- data.frame(replicate(6, sample(c(1:10, -99), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
# Generate a sample dataset
set.seed(1014)
df <- data.frame(replicate(6, sample(c(1:10, -99), 6, rep = TRUE)))
names(df) <- letters[1:6]
df
df[1:5]
fix_missing <- function(x) {
x[x == -99] <- NA
x
}
df[1:6] <- lapply(df[1:6],fix_missing)
df
formals(function(x = 4) g(x) + h(x))
body(function(x = 4) g(x) + h(x))
environment(function(x = 4) g(x) + h(x))
